/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType, JSONColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = ColumnType<JsonValue, string, string>;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export interface AccessPermissions {
  comment: string | null;
  id: Generated<number>;
  permission: "read" | "write";
  position_id: number;
  send_time: Date | null;
  status: "approved" | "disapproved" | "notSent" | "sent" | null;
  table_serie_id: number;
}

export interface Branches {
  branch: number;
  college: number | null;
  group: number | null;
  id: Generated<number>;
  name: string;
  province: number;
}

export interface BranchProvinces {
  id: number;
  name: string;
}

export interface BranchUser {
  branch_id: number;
  id: Generated<number>;
  user_id: number;
}

export interface Groups {
  id: Generated<number>;
  name: string;
}

export interface GroupUser {
  group_id: number;
  id: Generated<number>;
  user_id: number;
}

export interface Permissions {
  id: Generated<number>;
  name: string;
}

export interface PositionPermission {
  id: Generated<number>;
  permission_id: number;
  position_id: number;
}

export interface Positions {
  id: Generated<number>;
  level: "boss" | "deputy" | "expert" | "manager";
  name: string;
  parent: number | null;
  user_id: number | null;
}

export interface TableData {
  branch: number;
  created_at: Generated<Date>;
  data: Json;
  id: Generated<string>;
  table_id: number;
  updated_at: Generated<Date>;
}

export interface TableDefinition {
  columns_properties: JSONColumnType<{
  comboBoxValues: string[];
  model: "anyThings" | "phoneNumber" | "homeNumber" | "nationalCode" | "comboBox" | "decimal" | "date";
  name: string;
  nullable: boolean;
  regex: string;
}[]>;
  id: Generated<number>;
  old: JSONColumnType<{
  comboBoxValues: string[];
  model: "anyThings" | "phoneNumber" | "homeNumber" | "nationalCode" | "comboBox" | "decimal" | "date";
  name: string;
  nullable: boolean;
  regex: string;
}[]>;
  table_title_id: number;
}

export interface TableLog {
  branch_id: number;
  id: Generated<number>;
  table_id: number;
  user_id: number;
}

export interface TableSeries {
  approval_level: number;
  boss_position_id: number;
  change_lock: number;
  created: Generated<Date>;
  creator: number;
  deadline: Date;
  deputy_position_id: number;
  emp_position_id: number;
  id: Generated<number>;
  manager_position_id: number;
  modified: Date | null;
  previous_approval_level: number;
  serial_number: string;
  table_definition_id: number;
  write_permission: number;
}

export interface TableTitle {
  id: Generated<number>;
  table_title_FA: string;
}

export interface User {
  active: Generated<boolean>;
  first_name: Generated<string>;
  id: Generated<number>;
  last_name: Generated<string>;
  mobileNumber: string;
  nationalCode: string;
  type: "admin" | "branchUser" | "groupUser";
}

export interface DB {
  access_permissions: AccessPermissions;
  branch_provinces: BranchProvinces;
  branch_user: BranchUser;
  branches: Branches;
  group_user: GroupUser;
  groups: Groups;
  permissions: Permissions;
  position_permission: PositionPermission;
  positions: Positions;
  table_data: TableData;
  table_definition: TableDefinition;
  table_log: TableLog;
  table_series: TableSeries;
  table_title: TableTitle;
  user: User;
}
